<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.linlinjava.litemall.db.dao.LitemallOrderGoodsMapper">
    <resultMap id="BaseResultMap" type="org.linlinjava.litemall.db.domain.LitemallOrderGoods">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat Apr 07 10:22:31 CST 2018.
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="order_id" jdbcType="INTEGER" property="orderId"/>
        <result column="goods_id" jdbcType="INTEGER" property="goodsId"/>
        <result column="store_id" jdbcType="INTEGER" property="storeId"/>
        <result column="goods_name" jdbcType="VARCHAR" property="goodsName"/>
        <result column="goods_sn" jdbcType="VARCHAR" property="goodsSn"/>
        <result column="product_id" jdbcType="INTEGER" property="productId"/>
        <result column="treatment_num" jdbcType="INTEGER" property="treatmentNum"/>
        <result column="number" jdbcType="SMALLINT" property="number"/>
        <result column="retail_price" jdbcType="DECIMAL" property="retailPrice"/>
        <result column="actual_price" jdbcType="DECIMAL" property="actualPrice"/>
        <result column="order_status" jdbcType="SMALLINT" property="orderStatus"/>
        <result column="goods_specification_values" jdbcType="VARCHAR" property="goodsSpecificationValues"/>
        <result column="goods_specification_ids" jdbcType="CHAR" property="goodsSpecificationIds" typeHandler="org.linlinjava.litemall.db.mybatis.JsonIntegerArrayTypeHandler"/>
        <result column="pic_url" jdbcType="VARCHAR" property="picUrl"/>
        <result column="add_time" jdbcType="TIMESTAMP" property="addTime"/>
        <result column="deleted" jdbcType="BIT" property="deleted"/>
        <result column="is_extract" jdbcType="INTEGER" property="isExtract"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat Apr 07 10:22:31 CST 2018.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                        <foreach collection="criteria.goodsSpecificationIdsCriteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value,typeHandler=org.linlinjava.litemall.db.mybatis.JsonIntegerArrayTypeHandler}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value,typeHandler=org.linlinjava.litemall.db.mybatis.JsonIntegerArrayTypeHandler} and #{criterion.secondValue,typeHandler=org.linlinjava.litemall.db.mybatis.JsonIntegerArrayTypeHandler}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem,typeHandler=org.linlinjava.litemall.db.mybatis.JsonIntegerArrayTypeHandler}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat Apr 07 10:22:31 CST 2018.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                        <foreach collection="criteria.goodsSpecificationIdsCriteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value,typeHandler=org.linlinjava.litemall.db.mybatis.JsonIntegerArrayTypeHandler}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value,typeHandler=org.linlinjava.litemall.db.mybatis.JsonIntegerArrayTypeHandler} and #{criterion.secondValue,typeHandler=org.linlinjava.litemall.db.mybatis.JsonIntegerArrayTypeHandler}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem,typeHandler=org.linlinjava.litemall.db.mybatis.JsonIntegerArrayTypeHandler}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat Apr 07 10:22:31 CST 2018.
        -->
        id, order_id, goods_id, goods_name, goods_sn, product_id,treatment_num, `number`, retail_price, order_status,actual_price,
        goods_specification_values, goods_specification_ids, pic_url, add_time, deleted,is_extract
    </sql>
    <select id="selectByExample" parameterType="org.linlinjava.litemall.db.domain.LitemallOrderGoodsExample" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat Apr 07 10:22:31 CST 2018.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        id, order_id, goods_id, goods_name, goods_sn, product_id, `number`, retail_price, order_status,actual_price,
        goods_specification_values, goods_specification_ids, pic_url, add_time, deleted,is_extract
        from litemall_order_goods t1
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectOrderGoodsList" parameterType="org.linlinjava.litemall.db.domain.LitemallOrderGoods" resultMap="BaseResultMap">
        select
        t1.id, t1.order_id, t1.goods_id,t1.order_status,t1.actual_price,t1.store_id, t1.goods_name, t1.goods_sn, t1.product_id, t1.treatment_num,t1.`number`, t1.retail_price,
        t1.goods_specification_values, t1.goods_specification_ids, t1.pic_url, t1.add_time, t1.deleted,t1.is_extract,t2.flag as "flag"
        from litemall_order_goods t1 left join litemall_goods t2 on t1.goods_id = t2.id
        where 1 = 1
        and t1.order_id = ${orderId}
        and t1.deleted = false
        <if test="orderStatusList != null">
            and t1.order_status in
            <foreach collection="orderStatusList" item="item" index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>

    </select>


    <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          @project https://github.com/itfsw/mybatis-generator-plugin
        -->
        select
        <if test="example.distinct">
            distinct
        </if>
        <foreach collection="selective" item="column" separator=",">
            ${column.value}
        </foreach>
        from litemall_order_goods
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
        <if test="example.orderByClause != null">
            order by ${example.orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat Apr 07 10:22:31 CST 2018.
        -->
        select
        <include refid="Base_Column_List"/>
        from litemall_order_goods
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          @project https://github.com/itfsw/mybatis-generator-plugin
        -->
        select
        <foreach collection="selective" item="column" separator=",">
            ${column.value}
        </foreach>
        from litemall_order_goods
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat Apr 07 10:22:31 CST 2018.
        -->
        delete from litemall_order_goods
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="org.linlinjava.litemall.db.domain.LitemallOrderGoodsExample">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat Apr 07 10:22:31 CST 2018.
        -->
        delete from litemall_order_goods
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="org.linlinjava.litemall.db.domain.LitemallOrderGoods">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat Apr 07 10:22:31 CST 2018.
        -->
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into litemall_order_goods (order_id, goods_id, store_id,goods_name,
        goods_sn, product_id,treatment_num, `number`,
        retail_price,t1.order_status,t1.actual_price, goods_specification_values,
        goods_specification_ids,
        pic_url, add_time, deleted,is_extract
        )
        values (#{orderId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER},#{goodsName,jdbcType=VARCHAR},
        #{goodsSn,jdbcType=VARCHAR}, #{productId,jdbcType=INTEGER},#{treatmentNum,jdbcType=INTEGER}, #{number,jdbcType=SMALLINT},
        #{retailPrice,jdbcType=DECIMAL}, #{orderStatus,jdbcType=SMALLINT}, #{actualPrice,jdbcType=DECIMAL},
        #{goodsSpecificationValues,jdbcType=VARCHAR},
        #{goodsSpecificationIds,jdbcType=CHAR,typeHandler=org.linlinjava.litemall.db.mybatis.JsonIntegerArrayTypeHandler},
        #{picUrl,jdbcType=VARCHAR}, #{addTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=BIT},#{isExtract,jdbcType=INTEGER}
        )
    </insert>
    <insert id="insertSelective" parameterType="org.linlinjava.litemall.db.domain.LitemallOrderGoods">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat Apr 07 10:22:31 CST 2018.
        -->
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into litemall_order_goods
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orderId != null">
                order_id,
            </if>
            <if test="goodsId != null">
                goods_id,
            </if>
            <if test="storeId != null">
                store_id,
            </if>
            <if test="goodsName != null">
                goods_name,
            </if>
            <if test="goodsSn != null">
                goods_sn,
            </if>
            <if test="productId != null">
                product_id,
            </if>
            <if test="treatmentNum != null">
                treatment_num,
            </if>
            <if test="number != null">
                `number`,
            </if>
            <if test="retailPrice != null">
                retail_price,
            </if>
            <if test="orderStatus != null">
                order_status,
            </if>
            <if test="actualPrice != null">
                actual_price,
            </if>
            <if test="goodsSpecificationValues != null">
                goods_specification_values,
            </if>
            <if test="goodsSpecificationIds != null">
                goods_specification_ids,
            </if>
            <if test="picUrl != null">
                pic_url,
            </if>
            <if test="addTime != null">
                add_time,
            </if>
            <if test="deleted != null">
                deleted,
            </if>
            <if test="isExtract != null">
                is_extract,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orderId != null">
                #{orderId,jdbcType=INTEGER},
            </if>
            <if test="goodsId != null">
                #{goodsId,jdbcType=INTEGER},
            </if>
            <if test="storeId != null">
                #{storeId,jdbcType=INTEGER},
            </if>
            <if test="goodsName != null">
                #{goodsName,jdbcType=VARCHAR},
            </if>
            <if test="goodsSn != null">
                #{goodsSn,jdbcType=VARCHAR},
            </if>
            <if test="productId != null">
                #{productId,jdbcType=INTEGER},
            </if>
            <if test="treatmentNum != null">
                #{treatmentNum,jdbcType=INTEGER},
            </if>
            <if test="number != null">
                #{number,jdbcType=SMALLINT},
            </if>
            <if test="retailPrice != null">
                #{retailPrice,jdbcType=DECIMAL},
            </if>
            <if test="orderStatus != null">
                #{orderStatus,jdbcType=SMALLINT},
            </if>
            <if test="actualPrice != null">
                #{actualPrice,jdbcType=DECIMAL},
            </if>
            <if test="goodsSpecificationValues != null">
                #{goodsSpecificationValues,jdbcType=VARCHAR},
            </if>
            <if test="goodsSpecificationIds != null">
                #{goodsSpecificationIds,jdbcType=CHAR,typeHandler=org.linlinjava.litemall.db.mybatis.JsonIntegerArrayTypeHandler},
            </if>
            <if test="picUrl != null">
                #{picUrl,jdbcType=VARCHAR},
            </if>
            <if test="addTime != null">
                #{addTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleted != null">
                #{deleted,jdbcType=BIT},
            </if>
            <if test="isExtract != null">
                #{isExtract,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="org.linlinjava.litemall.db.domain.LitemallOrderGoodsExample" resultType="java.lang.Long">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat Apr 07 10:22:31 CST 2018.
        -->
        select count(*) from litemall_order_goods
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat Apr 07 10:22:31 CST 2018.
        -->
        update litemall_order_goods
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.orderId != null">
                order_id = #{record.orderId,jdbcType=INTEGER},
            </if>
            <if test="record.storeId != null">
                store_id = #{record.storeId,jdbcType=INTEGER},
            </if>
            <if test="record.goodsId != null">
                goods_id = #{record.goodsId,jdbcType=INTEGER},
            </if>
            <if test="record.goodsName != null">
                goods_name = #{record.goodsName,jdbcType=VARCHAR},
            </if>
            <if test="record.goodsSn != null">
                goods_sn = #{record.goodsSn,jdbcType=VARCHAR},
            </if>
            <if test="record.productId != null">
                product_id = #{record.productId,jdbcType=INTEGER},
            </if>
            <if test="record.treatmentNum != null">
                treatment_num = #{record.treatmentNum,jdbcType=INTEGER},
            </if>
            <if test="record.number != null">
                `number` = #{record.number,jdbcType=SMALLINT},
            </if>
            <if test="record.retailPrice != null">
                retail_price = #{record.retailPrice,jdbcType=DECIMAL},
            </if>
            <if test="record.orderStatus != null">
                order_status = #{orderStatus,jdbcType=SMALLINT},
            </if>
            <if test="record.actualPrice != null">
                actual_price = #{actualPrice,jdbcType=DECIMAL},
            </if>

            <if test="record.goodsSpecificationValues != null">
                goods_specification_values = #{record.goodsSpecificationValues,jdbcType=VARCHAR},
            </if>
            <if test="record.goodsSpecificationIds != null">
                goods_specification_ids = #{record.goodsSpecificationIds,jdbcType=CHAR,typeHandler=org.linlinjava.litemall.db.mybatis.JsonIntegerArrayTypeHandler},
            </if>
            <if test="record.picUrl != null">
                pic_url = #{record.picUrl,jdbcType=VARCHAR},
            </if>
            <if test="record.addTime != null">
                add_time = #{record.addTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.deleted != null">
                deleted = #{record.deleted,jdbcType=BIT},
            </if>
            <if test="record.isExtract != null">
                is_extract = #{isExtract,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat Apr 07 10:22:31 CST 2018.
        -->
        update litemall_order_goods
        set id = #{record.id,jdbcType=INTEGER},
        order_id = #{record.orderId,jdbcType=INTEGER},
        goods_id = #{record.goodsId,jdbcType=INTEGER},
        store_id = #{record.storeId,jdbcType=INTEGER},
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
        goods_sn = #{record.goodsSn,jdbcType=VARCHAR},
        product_id = #{record.productId,jdbcType=INTEGER},
        treatment_num = #{record.treatmentNum,jdbcType=INTEGER},
        `number` = #{record.number,jdbcType=SMALLINT},
        retail_price = #{record.retailPrice,jdbcType=DECIMAL},
        order_status = #{orderStatus,jdbcType=SMALLINT},
        actual_price = #{actualPrice,jdbcType=DECIMAL},
        goods_specification_values = #{record.goodsSpecificationValues,jdbcType=VARCHAR},
        goods_specification_ids = #{record.goodsSpecificationIds,jdbcType=CHAR,typeHandler=org.linlinjava.litemall.db.mybatis.JsonIntegerArrayTypeHandler},
        pic_url = #{record.picUrl,jdbcType=VARCHAR},
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
        deleted = #{record.deleted,jdbcType=BIT},
        is_extract = #{isExtract,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="org.linlinjava.litemall.db.domain.LitemallOrderGoods">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat Apr 07 10:22:31 CST 2018.
        -->
        update litemall_order_goods
        <set>
            <if test="orderId != null">
                order_id = #{orderId,jdbcType=INTEGER},
            </if>
            <if test="goodsId != null">
                goods_id = #{goodsId,jdbcType=INTEGER},
            </if>
            <if test="storeId != null">
                store_id = #{storeId,jdbcType=INTEGER},
            </if>
            <if test="goodsName != null">
                goods_name = #{goodsName,jdbcType=VARCHAR},
            </if>
            <if test="goodsSn != null">
                goods_sn = #{goodsSn,jdbcType=VARCHAR},
            </if>
            <if test="productId != null">
                product_id = #{productId,jdbcType=INTEGER},
            </if>
            <if test="treatmentNum != null">
                treatment_num = #{treatmentNum,jdbcType=INTEGER},
            </if>
            <if test="number != null">
                `number` = #{number,jdbcType=SMALLINT},
            </if>
            <if test="retailPrice != null">
                retail_price = #{retailPrice,jdbcType=DECIMAL},
            </if>
            <if test="orderStatus != null">
                order_status = #{orderStatus,jdbcType=SMALLINT},
            </if>
            <if test="actualPrice != null">
                actual_price = #{actualPrice,jdbcType=DECIMAL},
            </if>

            <if test="goodsSpecificationValues != null">
                goods_specification_values = #{goodsSpecificationValues,jdbcType=VARCHAR},
            </if>
            <if test="goodsSpecificationIds != null">
                goods_specification_ids = #{goodsSpecificationIds,jdbcType=CHAR,typeHandler=org.linlinjava.litemall.db.mybatis.JsonIntegerArrayTypeHandler},
            </if>
            <if test="picUrl != null">
                pic_url = #{picUrl,jdbcType=VARCHAR},
            </if>
            <if test="addTime != null">
                add_time = #{addTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleted != null">
                deleted = #{deleted,jdbcType=BIT},
            </if>
            <if test="isExtract != null">
                is_extract = #{isExtract,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.linlinjava.litemall.db.domain.LitemallOrderGoods">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat Apr 07 10:22:31 CST 2018.
        -->
        update litemall_order_goods
        set order_id = #{orderId,jdbcType=INTEGER},
        goods_id = #{goodsId,jdbcType=INTEGER},
        store_id = #{storeId,jdbcType=INTEGER},
        goods_name = #{goodsName,jdbcType=VARCHAR},
        goods_sn = #{goodsSn,jdbcType=VARCHAR},
        product_id = #{productId,jdbcType=INTEGER},
        treatment_num = #{treatmentNum,jdbcType=INTEGER},
        `number` = #{number,jdbcType=SMALLINT},
        retail_price = #{retailPrice,jdbcType=DECIMAL},
        order_status = #{orderStatus,jdbcType=SMALLINT},
        actual_price = #{actualPrice,jdbcType=DECIMAL},
        goods_specification_values = #{goodsSpecificationValues,jdbcType=VARCHAR},
        goods_specification_ids = #{goodsSpecificationIds,jdbcType=CHAR,typeHandler=org.linlinjava.litemall.db.mybatis.JsonIntegerArrayTypeHandler},
        pic_url = #{picUrl,jdbcType=VARCHAR},
        add_time = #{addTime,jdbcType=TIMESTAMP},
        deleted = #{deleted,jdbcType=BIT},
        is_extract = #{isExtract,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectOneByExample" parameterType="org.linlinjava.litemall.db.domain.LitemallOrderGoodsExample" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          @project https://github.com/itfsw/mybatis-generator-plugin
        -->
        select
        <include refid="Base_Column_List"/>
        from litemall_order_goods
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        limit 1
    </select>
    <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          @project https://github.com/itfsw/mybatis-generator-plugin
        -->
        select
        <foreach collection="selective" item="column" separator=",">
            ${column.value}
        </foreach>
        from litemall_order_goods
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
        <if test="example.orderByClause != null">
            order by ${example.orderByClause}
        </if>
        limit 1
    </select>

    <select id="selectTimeData" parameterType="java.lang.String" resultType="org.linlinjava.litemall.db.domain.LitemallTime">
    select count(a.id) as count ,
    	a.store_id as storeId
	    from  litemall_reserve a left join litemall_store b on a.store_id= b.id
    where 
        a.reserve_status != 2
	    and a.store_id=#{storeId}
	    and a.reserve_time= #{time}
	    and a.reserve_date = #{currentTime}
	  
  </select>


    <select id="selectMaxServicePeo" parameterType="java.lang.String" resultType="java.lang.String">
    select 
    	service_peo as "maxServicePeo"
	    from   litemall_store 
    where 
	 	id=#{storeId}
	  
  </select>

    <!--  reserveDetail-->
    <insert id="reserveDetail" parameterType="org.linlinjava.litemall.db.domain.LitemallReserve">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into litemall_reserve
        <trim prefix="(" suffix=")" suffixOverrides=",">
            reserve_status,
            <if test="orderGoodsId != null">
                order_goods_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="startTime != null">
                start_time,
            </if>
            <if test="endTime != null">
                end_time,
            </if>
            <if test="reserveDate != null">
                reserve_date,
            </if>

            <if test="reserveTime != null">
                reserve_time,
            </if>
            <if test="storeId != null">
                store_id,
            </if>


        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            '0',<!-- 预定状态 0:预定未使用，1：预定已使用，2：预定取消 -->
            <if test="orderGoodsId != null">
                #{orderGoodsId,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="startTime != null">
                #{startTime,jdbcType=VARCHAR},
            </if>
            <if test="endTime != null">
                #{endTime,jdbcType=VARCHAR},
            </if>
            <if test="reserveDate != null">
                #{reserveDate,jdbcType=VARCHAR},
            </if>
            <if test="reserveTime != null">
                #{reserveTime,jdbcType=VARCHAR},
            </if>
            <if test="storeId != null">
                #{storeId,jdbcType=INTEGER},
            </if>

        </trim>
    </insert>


    <!-- 更新litemall_order_goods -->

    <update id="updateOrderGoods" parameterType="org.linlinjava.litemall.db.domain.LitemallReserve">
        update litemall_order_goods
        <set>
            order_status = '301'
        </set>
        where id = #{orderGoodsId,jdbcType=INTEGER}
    </update>


    <select id="saleOrderCount" resultType="java.lang.Long" parameterType="org.linlinjava.litemall.db.domain.LitemallReportParam">
        SELECT count(log.id)
        FROM litemall_order_goods log
        LEFT JOIN litemall_store ls ON ls.id=log.store_id
        LEFT JOIN litemall_order lo ON lo.id=log.order_id
        LEFT JOIN litemall_goods lg ON lg.id=log.goods_id
        LEFT JOIN litemall_product lp ON lp.id=log.product_id
        LEFT JOIN litemall_user lu ON lu.id=lo.user_id
        <where>
            <if test="storeId != null">
                ls.id=#{storeId}
            </if>
            <if test="memberId != null and memberId.trim() != ''">
                and lu.member_id like concat (concat ('%',#{memberId}),'%')
            </if>
            <if test="username != null and username.trim() != ''">
                and lu.username like concat (concat ('%',#{username}),'%')
            </if>
            <if test="goodsFlag != null and goodsFlag.trim() != ''">
                and lg.flag =${goodsFlag}
            </if>
            <if test="goodsName != null and goodsName.trim() != ''">
                and lg.`name` like concat (concat ('%',#{goodsName}),'%')
            </if>
            <if test="orderStatus != null">
                and lo.order_status =#{orderStatus}
            </if>
            <if test="beginDate != null">
                and lo.add_time &gt;=#{beginDate}
            </if>
            <if test="endDate != null">
                and lo.add_time &lt;=#{endDate}
            </if>
        </where>
    </select>

    <select id="saleOrderList" resultType="org.linlinjava.litemall.db.dto.SaleOrderReportDTO" parameterType="org.linlinjava.litemall.db.domain.LitemallReportParam">
        SELECT ls.store_name AS storeName, DATE_FORMAT(lo.add_time,'%Y-%m-%d') as orderDate, lo.order_sn AS orderSn,lo.order_status AS orderStatus,lg.`name` AS goodsName,log.number AS goodsNumber,lp.retail_price AS unitPrice,
        (log.number*lp.retail_price) AS totalPrices,log.treatment_num AS residueTreatmentNum, lg.flag AS goodsFlag,(lg.treatment_num*log.number) AS treatmentNumCount,lu.member_id AS memberId,lu.username AS username,
        lo.order_price AS orderPrice,lo.coupon_price AS couponPrice,log.actual_price AS actualPrice
        FROM litemall_order_goods log
        LEFT JOIN litemall_store ls ON ls.id=log.store_id
        LEFT JOIN litemall_order lo ON lo.id=log.order_id
        LEFT JOIN litemall_goods lg ON lg.id=log.goods_id
        LEFT JOIN litemall_product lp ON lp.id=log.product_id
        LEFT JOIN litemall_user lu ON lu.id=lo.user_id
        <where>
            <if test="storeId != null">
                ls.id=#{storeId}
            </if>
            <if test="memberId != null and memberId.trim() != ''">
                and lu.member_id like concat (concat ('%',#{memberId}),'%')
            </if>
            <if test="username != null and username.trim() != ''">
                and lu.username like concat (concat ('%',#{username}),'%')
            </if>
            <if test="goodsFlag != null and goodsFlag.trim() != ''">
                and lg.flag =${goodsFlag}
            </if>
            <if test="goodsName != null and goodsName.trim() != ''">
                and lg.`name` like concat (concat ('%',#{goodsName}),'%')
            </if>
            <if test="orderStatus != null">
                and lo.order_status =#{orderStatus}
            </if>
            <if test="beginDate != null and beginDate.trim() != ''">
                and lo.add_time &gt;=#{beginDate}
            </if>
            <if test="endDate != null and endDate.trim() != ''">
                and lo.add_time &lt;=#{endDate}
            </if>
        </where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                ORDER BY ${sort} ${order}
            </when>
            <otherwise>
                ORDER BY lo.order_sn DESC
            </otherwise>
        </choose>
        <if test="offset != null and limit !=null ">
            limit #{offset},#{limit}
        </if>
    </select>

    <select id="saleExcuteCount" resultType="java.lang.Long" parameterType="org.linlinjava.litemall.db.domain.LitemallReportParam">
        SELECT count(lr.id)
        FROM litemall_reserve lr
        LEFT JOIN litemall_order_goods log ON log.id=lr.order_goods_id
        LEFT JOIN litemall_store ls ON ls.id=log.store_id
        LEFT JOIN litemall_order lo ON lo.id=log.order_id
        LEFT JOIN litemall_goods lg ON lg.id=log.goods_id
        LEFT JOIN litemall_product lp ON lp.id=log.product_id
        LEFT JOIN litemall_user lu ON lu.id=lo.user_id
        LEFT JOIN litemall_admin la ON la.id=lr.doctor_id
        WHERE lr.reserve_status=1
        <if test="storeId != null">
            and ls.id=#{storeId}
        </if>
        <if test="memberId != null and memberId.trim() != ''">
            and lu.member_id like concat (concat ('%',#{memberId}),'%')
        </if>
        <if test="username != null and username.trim() != ''">
            and lu.username like concat (concat ('%',#{username}),'%')
        </if>
        <if test="goodsFlag != null and goodsFlag.trim() != ''">
            and lg.flag =${goodsFlag}
        </if>
        <if test="goodsName != null and goodsName.trim() != ''">
            and lg.`name` like concat (concat ('%',#{goodsName}),'%')
        </if>
        <if test="doctorName != null and doctorName.trim() != ''">
            and la.username like concat (concat ('%',#{doctorName}),'%')
        </if>
        <if test="beginDate != null and beginDate.trim() != ''">
            and lo.add_time &gt;=#{beginDate}
        </if>
        <if test="endDate != null and endDate.trim() != ''">
            and lo.add_time &lt;=#{endDate}
        </if>
    </select>

    <select id="saleExcuteList" resultType="org.linlinjava.litemall.db.dto.SaleOrderReportDTO" parameterType="org.linlinjava.litemall.db.domain.LitemallReportParam">
        SELECT ls.store_name AS storeName, DATE_FORMAT(lo.add_time,'%Y-%m-%d') AS orderDate, lo.order_sn AS orderSn,DATE_FORMAT(lr.start_time,'%Y-%m-%d') AS executeDate,lg.`name` AS goodsName,(lg.treatment_num*log.number) AS treatmentNumCount,
        lg.flag AS goodsFlag,lu.member_id AS memberId,lu.username AS username,la.username AS doctorName,lo.order_price AS orderPrice,lo.coupon_price AS couponPrice,lo.actual_price AS actualPrice
        FROM litemall_reserve lr
        LEFT JOIN litemall_order_goods log ON log.id=lr.order_goods_id
        LEFT JOIN litemall_store ls ON ls.id=log.store_id
        LEFT JOIN litemall_order lo ON lo.id=log.order_id
        LEFT JOIN litemall_goods lg ON lg.id=log.goods_id
        LEFT JOIN litemall_product lp ON lp.id=log.product_id
        LEFT JOIN litemall_user lu ON lu.id=lo.user_id
        LEFT JOIN litemall_admin la ON la.id=lr.doctor_id
        WHERE lr.reserve_status=1
        <if test="storeId != null">
            and ls.id=#{storeId}
        </if>
        <if test="memberId != null and memberId.trim() != ''">
            and lu.member_id like concat (concat ('%',#{memberId}),'%')
        </if>
        <if test="username != null and username.trim() != ''">
            and lu.username like concat (concat ('%',#{username}),'%')
        </if>
        <if test="goodsFlag != null and goodsFlag.trim() != ''">
            and lg.flag =${goodsFlag}
        </if>
        <if test="goodsName != null and goodsName.trim() != ''">
            and lg.`name` like concat (concat ('%',#{goodsName}),'%')
        </if>
        <if test="doctorName != null and doctorName.trim() != ''">
            and la.username like concat (concat ('%',#{doctorName}),'%')
        </if>
        <if test="beginDate != null and beginDate.trim() != ''">
            and lo.add_time &gt;=#{beginDate}
        </if>
        <if test="endDate != null and endDate.trim() != ''">
            and lo.add_time &lt;=#{endDate}
        </if>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                ORDER BY ${sort} ${order}
            </when>
            <otherwise>
                ORDER BY lo.order_sn DESC
            </otherwise>
        </choose>
        <if test="offset != null and limit !=null ">
            limit #{offset},#{limit}
        </if>
    </select>




    <select id="distributionReportCount" resultType="java.lang.Long" parameterType="org.linlinjava.litemall.db.domain.LitemallReportParam">
        SELECT count(*) FROM(
        SELECT t.*,<!--2018/12/11-->llu.label_id as labelId FROM(
        SELECT a.* ,lu.p_id as
        distributionId,ear.operation as operationType,ear.profit_money as profitMoney FROM (
        SELECT b.* ,liteu.member_id AS memberId,liteu.username AS username FROM(
        SELECT c.* FROM(
        SELECT ls.store_name AS storeName, DATE_FORMAT(lo.add_time,'%Y-%m-%d') as orderDate, lo.order_sn AS
        orderSn,lo.order_status AS orderStatus,lg.`name` AS goodsName,log.number AS goodsNumber,lp.retail_price AS
        unitPrice,lo.user_id,lo.id,
        (log.number*lp.retail_price) AS totalPrices,log.treatment_num AS residueTreatmentNum, lg.flag AS
        goodsFlag,(lg.treatment_num*log.number) AS treatmentNumCount,
        lo.order_price AS orderPrice,lo.coupon_price AS couponPrice,log.actual_price AS actualPrice
        FROM litemall_order_goods log
        LEFT JOIN litemall_store ls ON ls.id=log.store_id
        LEFT JOIN litemall_order lo ON lo.id=log.order_id
        LEFT JOIN litemall_goods lg ON lg.id=log.goods_id
        LEFT JOIN litemall_product lp ON lp.id=log.product_id
        <where>
            1=1
            <if test="storeId != null">
                and ls.id=#{storeId}
            </if>
            <if test="goodsFlag != null and goodsFlag.trim() != ''">
                and lg.flag =${goodsFlag}
            </if>
            <if test="goodsName != null and goodsName.trim() != ''">
                and lg.`name` like concat (concat ('%',#{goodsName}),'%')
            </if>
            <if test="orderStatus != null">
                and lo.order_status =#{orderStatus}
            </if>

            <if test="beginDate != null and beginDate.trim() != ''">
                and lo.add_time &gt;=#{beginDate}
            </if>
            <if test="endDate != null and endDate.trim() != ''">
                and lo.add_time &lt;=#{endDate}
            </if>
        </where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                ORDER BY ${sort} ${order}
            </when>
            <otherwise>
                ORDER BY lo.add_time DESC
            </otherwise>
        </choose>
        ) c
        <where>
            <if test="orderUserIds != null">
                c.user_id in
                <foreach collection="orderUserIds" item="orderUserId" separator="," open="(" close=")">
                    #{orderUserId}
                </foreach>
            </if>
        </where>
        ) b
        LEFT JOIN litemall_user liteu on liteu.id = b.user_id
        <where>
            1=1
            <if test="memberId != null and memberId.trim() != ''">
                and liteu.member_id like concat (concat ('%',#{memberId}),'%')
            </if>
            <if test="username != null and username.trim() != ''">
                and liteu.username like concat (concat ('%',#{username}),'%')
            </if>
        </where>
        ) a
        LEFT JOIN litemall_user lu ON lu.id=a.user_id
        LEFT JOIN litemall_earnings ear ON ear.order_id=a.id
        <where>
            <!--2018/12/11-->
            <if test="distributionIds != null">
                lu.p_id in
                <foreach collection="distributionIds" item="distributionId" separator="," open="(" close=")">
                    #{distributionId}
                </foreach>
            </if>
            <if test="optType != null">
                ear.operation=#{optType}
            </if>
            <!--2018/12/11-->
        </where>
        ) t  <!--2018/12/11修改-->
        LEFT JOIN litemall_label_user llu ON llu.user_id = t.distributionId) l
        <where>
            <if test="labelIds != null">
                l.labelId in
                <foreach collection="labelIds" item="labelId" separator="," open="(" close=")">
                    #{labelId}
                </foreach>
            </if>
        </where>
    </select>

    <select id="distributionReportList" resultType="org.linlinjava.litemall.db.dto.SaleOrderReportDTO" parameterType="org.linlinjava.litemall.db.domain.LitemallReportParam">
        SELECT l.storeName,l.orderDate,l.orderSn,l.orderStatus,l.goodsName,l.goodsNumber,l.unitPrice,
        l.totalPrices,l.residueTreatmentNum,l.goodsFlag,l.treatmentNumCount,l.memberId,l.username,
        l.orderPrice,l.couponPrice,l.actualPrice,l.distributionId,l.operationType,l.profitMoney,l.labelId,CONCAT(ROUND((ifnull(l.profitMoney,0)/l.actualPrice)*100,1),'%') as distributionRate,
       (select if(classUser.p_id is null,'1级','2级') from litemall_user classUser where classUser.id=l.distributionId) as distributeClass
        FROM(
        SELECT t.*,<!--2018/12/11-->llu.label_id as labelId FROM(
        SELECT a.* ,lu.p_id as
        distributionId,ear.operation as operationType,ear.profit_money as profitMoney FROM (
        SELECT b.* ,liteu.member_id AS memberId,liteu.username AS username FROM(
        SELECT c.* FROM(
        SELECT ls.store_name AS storeName, DATE_FORMAT(lo.add_time,'%Y-%m-%d') as orderDate, lo.order_sn AS
        orderSn,lo.order_status AS orderStatus,lg.`name` AS goodsName,log.number AS goodsNumber,lp.retail_price AS
        unitPrice,lo.user_id,lo.id,
        (log.number*lp.retail_price) AS totalPrices,log.treatment_num AS residueTreatmentNum, lg.flag AS
        goodsFlag,(lg.treatment_num*log.number) AS treatmentNumCount,
        lo.order_price AS orderPrice,lo.coupon_price AS couponPrice,log.actual_price AS actualPrice
        FROM litemall_order_goods log
        LEFT JOIN litemall_store ls ON ls.id=log.store_id
        LEFT JOIN litemall_order lo ON lo.id=log.order_id
        LEFT JOIN litemall_goods lg ON lg.id=log.goods_id
        LEFT JOIN litemall_product lp ON lp.id=log.product_id
        <where>
            1=1
            <if test="storeId != null">
                and ls.id=#{storeId}
            </if>
            <if test="goodsFlag != null and goodsFlag.trim() != ''">
                and lg.flag =${goodsFlag}
            </if>
            <if test="goodsName != null and goodsName.trim() != ''">
                and lg.`name` like concat (concat ('%',#{goodsName}),'%')
            </if>
            <if test="orderStatus != null">
                and lo.order_status =#{orderStatus}
            </if>

            <if test="beginDate != null and beginDate.trim() != ''">
                and lo.add_time &gt;=#{beginDate}
            </if>
            <if test="endDate != null and endDate.trim() != ''">
                and lo.add_time &lt;=#{endDate}
            </if>
        </where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                ORDER BY ${sort} ${order}
            </when>
            <otherwise>
                ORDER BY lo.add_time DESC
            </otherwise>
        </choose>
        ) c
        <where>
            <if test="orderUserIds != null">
                c.user_id in
                <foreach collection="orderUserIds" item="orderUserId" separator="," open="(" close=")">
                    #{orderUserId}
                </foreach>
            </if>
        </where>
        ) b
          LEFT JOIN litemall_user liteu on liteu.id = b.user_id
          <where>
              1=1
              <if test="memberId != null and memberId.trim() != ''">
                 and liteu.member_id like concat (concat ('%',#{memberId}),'%')
              </if>
              <if test="username != null and username.trim() != ''">
                 and liteu.username like concat (concat ('%',#{username}),'%')
              </if>
          </where>
        ) a
          LEFT JOIN litemall_user lu ON lu.id=a.user_id
          LEFT JOIN litemall_earnings ear ON ear.order_id=a.id
          <where>
              <!--2018/12/11-->
              <if test="distributionIds != null">
                   lu.p_id in
                  <foreach collection="distributionIds" item="distributionId" separator="," open="(" close=")">
                      #{distributionId}
                  </foreach>
              </if>
              <if test="optType != null">
                  ear.operation=#{optType}
              </if>
              <!--2018/12/11-->
          </where>
        ) t  <!--2018/12/11修改-->
        LEFT JOIN litemall_label_user llu ON llu.user_id = t.distributionId) l
        <where>
            <if test="labelIds != null">
                 l.labelId in
                <foreach collection="labelIds" item="labelId" separator="," open="(" close=")">
                    #{labelId}
                </foreach>
            </if>
        </where>
        <if test="offset != null and limit !=null ">
            limit #{offset},#{limit}
        </if>
    </select>

</mapper>